{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/wproj/client/src/Login.js\";\nimport React from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport LoginPage from './components/LoginPage';\nimport \"./Login.css\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoginOpen: true\n    };\n  }\n\n  showLoginBox() {\n    this.setState({\n      isLoginOpen: true\n    });\n  }\n\n  showRegisterBox() {\n    this.setState({\n      isLoginOpen: false\n    });\n  }\n\n  componentDidMount() {\n    console.log(\"Login Mounted\");\n    this.props.socket.emit('test', \"test\");\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"root-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"box-controller\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"controller \" + (this.state.isLoginOpen ? \"selected-controller\" : \"\"),\n      onClick: this.showLoginBox.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"div\", {\n      className: \"controller \" + (this.state.isRegisterOpen ? \"selected-controller\" : \"\"),\n      onClick: this.showRegisterBox.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Register\")), this.state.isLoginOpen && React.createElement(\"div\", {\n      className: \"box-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(LoginBox, {\n      socket: this.props.socket,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })), !this.state.isLoginOpen && React.createElement(\"div\", {\n      className: \"box-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(RegisterBox, {\n      socket: this.props.socket,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })));\n  }\n\n}\n\nclass LoginBox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUserChange = e => {\n      this.setState({\n        username: e.target.value\n      });\n    };\n\n    this.handlePasswordChange = e => {\n      this.setState({\n        password: e.target.value\n      });\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n  }\n\n  submitLogin(e) {\n    this.props.socket.emit('login', {\n      username: this.state.username,\n      password: this.state.password\n    });\n    console.log(\"login submitted\");\n  }\n\n  render() {\n    return React.createElement(LoginPage, {\n      action: \"Login\",\n      userOnChage: this.handleUserChange,\n      passOnChange: this.handlePasswordChange,\n      submit: this.submitLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })\n    /*\n    <div className=\"inner-container\">\n      <div className=\"header\">\n        Login\n      </div>\n      <div className=\"box\">\n           <div className=\"input-group\">\n          <label htmlFor=\"username\">Username</label>\n          <input\n            type=\"text\"\n            name=\"username\"\n            className=\"login-input\"\n            placeholder=\"Username\"/>\n        </div>\n           <div className=\"input-group\">\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            className=\"login-input\"\n            placeholder=\"Password\"/>\n        </div>\n           <button\n          type=\"button\"\n          className=\"login-btn\"\n          onClick={this\n          .submitLogin\n          .bind(this)}>Login</button>\n         </div>\n    </div>*/\n    ;\n  }\n\n}\n\nclass RegisterBox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUserChange = e => {\n      this.setState({\n        username: e.target.value\n      });\n    };\n\n    this.handlePasswordChange = e => {\n      this.setState({\n        password: e.target.value\n      });\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n  }\n\n  submitLogin(e) {\n    this.props.socket.emit('reg', {\n      username: this.state.username,\n      password: this.state.password\n    });\n    console.log(\"reg submitted\");\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"inner-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Register\"), React.createElement(\"div\", {\n      className: \"box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      className: \"login-input\",\n      placeholder: \"Username\",\n      onChange: this.handleUserChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      className: \"login-input\",\n      placeholder: \"Password\",\n      onChange: this.handlePasswordChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"login-btn\",\n      onClick: this.submitLogin.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"Register\")));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/apple/Desktop/wproj/client/src/Login.js"],"names":["React","socketIOClient","LoginPage","Login","Component","constructor","props","state","isLoginOpen","showLoginBox","setState","showRegisterBox","componentDidMount","console","log","socket","emit","render","bind","isRegisterOpen","LoginBox","handleUserChange","e","username","target","value","handlePasswordChange","password","submitLogin","RegisterBox"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport LoginPage from './components/LoginPage';\nimport \"./Login.css\"\nclass Login extends React.Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        isLoginOpen: true\n      };\n    }\n  \n    showLoginBox() {\n      this.setState({isLoginOpen: true});\n    }\n  \n    showRegisterBox() {\n      this.setState({isLoginOpen: false});\n    }\n\n    componentDidMount(){\n      console.log(\"Login Mounted\")\n      this.props.socket.emit('test',\"test\")\n    }\n  \n    render() {\n      return (\n        <div className=\"root-container\">\n  \n          <div className=\"box-controller\">\n            <div\n              className={\"controller \" + (this.state.isLoginOpen\n              ? \"selected-controller\"\n              : \"\")}\n              onClick={this\n              .showLoginBox\n              .bind(this)}>\n              Login\n            </div>\n            <div\n              className={\"controller \" + (this.state.isRegisterOpen\n              ? \"selected-controller\"\n              : \"\")}\n              onClick={this\n              .showRegisterBox\n              .bind(this)}>\n              Register\n            </div>\n          </div>\n   \n          {this.state.isLoginOpen && <div className=\"box-container\"><LoginBox socket={this.props.socket}/></div>}\n          {!this.state.isLoginOpen && <div className=\"box-container\"><RegisterBox socket={this.props.socket}/></div>}\n  \n        </div>\n      );\n  \n    }\n  \n  }\n\n  class LoginBox extends React.Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        username : \"\",\n        password : \"\"\n      };\n    }\n    submitLogin(e) {\n      this.props.socket.emit('login',{\n        username : this.state.username,\n        password : this.state.password\n      })\n      console.log(\"login submitted\")\n    }\n    handleUserChange = e => {this.setState({\n      username : e.target.value\n    })} \n\n    handlePasswordChange = e => {this.setState({\n      password : e.target.value\n    })} \n  \n    render() {\n      return (\n        <LoginPage action=\"Login\" userOnChage={this.handleUserChange} passOnChange={this.handlePasswordChange} \n                   submit={this.submitLogin}></LoginPage>\n        /*\n        <div className=\"inner-container\">\n          <div className=\"header\">\n            Login\n          </div>\n          <div className=\"box\">\n  \n            <div className=\"input-group\">\n              <label htmlFor=\"username\">Username</label>\n              <input\n                type=\"text\"\n                name=\"username\"\n                className=\"login-input\"\n                placeholder=\"Username\"/>\n            </div>\n  \n            <div className=\"input-group\">\n              <label htmlFor=\"password\">Password</label>\n              <input\n                type=\"password\"\n                name=\"password\"\n                className=\"login-input\"\n                placeholder=\"Password\"/>\n            </div>\n  \n            <button\n              type=\"button\"\n              className=\"login-btn\"\n              onClick={this\n              .submitLogin\n              .bind(this)}>Login</button>\n  \n          </div>\n        </div>*/\n      );\n    }\n  \n  }\n\n  class RegisterBox extends React.Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        username : \"\",\n        password : \"\"\n      };\n    }\n  \n    submitLogin(e) {\n      this.props.socket.emit('reg',{\n        username : this.state.username,\n        password : this.state.password\n      })\n      console.log(\"reg submitted\")\n    }\n    handleUserChange = e => {this.setState({\n      username : e.target.value\n    })} \n\n    handlePasswordChange = e => {this.setState({\n      password : e.target.value\n    })} \n  \n    render() {\n      return (\n        <div className=\"inner-container\">\n          <div className=\"header\">\n            Register\n          </div>\n          <div className=\"box\">\n  \n            <div className=\"input-group\">\n              <label htmlFor=\"username\">Username</label>\n              <input\n                type=\"text\"\n                name=\"username\"\n                className=\"login-input\"\n                placeholder=\"Username\"\n                onChange={this.handleUserChange}/>\n            </div>\n  \n            <div className=\"input-group\">\n              <label htmlFor=\"password\">Password</label>\n              <input\n                type=\"password\"\n                name=\"password\"\n                className=\"login-input\"\n                placeholder=\"Password\"\n                onChange={this.handlePasswordChange}/>\n            </div>\n  \n            <button\n              type=\"button\"\n              className=\"login-btn\"\n              onClick={this\n              .submitLogin\n              .bind(this)}>Register</button>\n  \n          </div>\n        </div>\n      );\n    }\n  \n  }\n\nexport default Login"]},"metadata":{},"sourceType":"module"}