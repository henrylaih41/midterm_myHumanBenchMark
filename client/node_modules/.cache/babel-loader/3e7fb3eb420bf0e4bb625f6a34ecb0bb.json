{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/wproj/client/src/container/NumberMemory.js\";\nimport React from \"react\";\nimport \"../css/Main.css\";\n\nclass NumberMemory extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.start = e => {\n      if (!this.state.start) {\n        this.setState({\n          start: true\n        });\n      }\n\n      this.clicked();\n    };\n\n    this.clicked = () => {\n      this.setState({\n        show: true,\n        level: this.state.level + 1,\n        numToMem: this.genRandNumber(this.state.level + 1),\n        test: false\n      });\n      setTimeout(this.test, 2000);\n    };\n\n    this.test = () => {\n      this.setState({\n        show: false,\n        test: true\n      });\n    };\n\n    this.submit = () => {\n      if (this.refs.input.value == this.state.numToMem) {\n        this.clicked();\n      } else {\n        this.setState({\n          end: true,\n          test: false\n        });\n      }\n    };\n\n    this.enter = e => {\n      if (e.keyCode === 13) {\n        this.submit();\n      }\n    };\n\n    this.retry = () => {\n      this.props.socket.emit(\"save_numMem\", this.props.acc, this.state.level, undefined);\n      this.setState({\n        start: false,\n        end: false,\n        show: false,\n        test: false,\n        level: 0,\n        numToMem: undefined\n      });\n    };\n\n    this.saved = () => {\n      this.props.socket.emit(\"login\", this.props.acc);\n    };\n\n    this.done = () => {\n      this.props.socket.emit(\"save_numMem\", this.props.acc, this.state.level, this.saved);\n    };\n\n    this.state = {\n      start: false,\n      end: false,\n      show: false,\n      test: false,\n      level: 0,\n      numToMem: undefined\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"NumMemory Mounted\");\n  } // start when user clicked the screen\n\n\n  // generate random number according to digitlengh\n  genRandNumber(digitlength) {\n    var myNum = \"\";\n\n    while (myNum.length < digitlength) {\n      myNum = Math.round(Math.random() * Math.pow(10, digitlength)).toString();\n    }\n\n    return Number(myNum);\n  } // if the user got the right answer, proceed to next level\n\n\n  render() {\n    return React.createElement(\"html\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"head\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://use.fontawesome.com/releases/v5.8.2/css/all.css\",\n      integrity: \"sha384-oS3vJWv+0UjzBfQzYUhtDYW+Pj2yciDJxpsK1OYPAYjqT085Qq/1cq5FLXAZQ7Ay\",\n      crossorigin: \"anonymous\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(\"body\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, !this.state.start && React.createElement(\"section\", {\n      onClick: this.start,\n      id: \"banner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"fas fa-sort-numeric-down fa-5x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"NumberMemory Test\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Try to remember the numbers within 8 seconds\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Click anywhere to start\")), React.createElement(\"div\", {\n      ref: \"Num\",\n      className: \"NumberMemory\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, this.state.show && React.createElement(\"div\", {\n      className: \"textContainer\",\n      ref: \"numberToMem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.state.numToMem), this.state.test && React.createElement(\"section\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onKeyDown: this.enter,\n      className: \"test\",\n      ref: \"input\",\n      type: \"number\",\n      autofocus: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"textContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Enter the shown number\"), React.createElement(\"ul\", {\n      class: \"actions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      onClick: this.submit,\n      class: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"submit\")))), this.state.end && React.createElement(\"section\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"textContainer\",\n      id: \"end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"You reached level \", this.state.level), React.createElement(\"ul\", {\n      class: \"actions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      onClick: this.done,\n      class: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Done\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      onClick: this.retry,\n      class: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Retry\")))))));\n  }\n\n}\n\nexport default NumberMemory;","map":{"version":3,"sources":["/Users/apple/Desktop/wproj/client/src/container/NumberMemory.js"],"names":["React","NumberMemory","Component","constructor","props","start","e","state","setState","clicked","show","level","numToMem","genRandNumber","test","setTimeout","submit","refs","input","value","end","enter","keyCode","retry","socket","emit","acc","undefined","saved","done","componentDidMount","console","log","digitlength","myNum","length","Math","round","random","pow","toString","Number","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../css/Main.css\"\nclass NumberMemory extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n          start: false,\n          end: false,\n          show: false,\n          test: false,\n          level: 0,\n          numToMem: undefined\n      };\n    }\n    \n    componentDidMount(){\n      console.log(\"NumMemory Mounted\")\n    } \n    // start when user clicked the screen\n    start = (e) => {\n        if(!this.state.start){\n            this.setState({start: true})\n        }\n        this.clicked()\n    }\n    // generate random number according to digitlengh\n    genRandNumber(digitlength){\n        var myNum = \"\"\n        while(myNum.length < digitlength){\n            myNum = (Math.round(Math.random() * Math.pow(10,digitlength))).toString()\n        }\n        return Number(myNum) \n    }\n    // if the user got the right answer, proceed to next level\n    clicked = () => {\n        this.setState({show: true, level: this.state.level + 1, numToMem: this.genRandNumber(this.state.level + 1), test: false})\n        setTimeout(this.test, 2000);\n    }\n    // show the input bar to the user to answer\n    test = () => {\n        this.setState({show: false, test: true})\n    }\n    // submit the answer\n    submit = () => {\n        if(this.refs.input.value == this.state.numToMem){\n            this.clicked()\n        }\n        else{\n            this.setState({end: true, test:false})\n        }\n    }\n\n    enter = (e) => {\n        if(e.keyCode === 13){\n            this.submit()\n        }\n    }\n    // save the record and reset the page\n    retry = () => {\n        this.props.socket.emit(\"save_numMem\",this.props.acc,this.state.level,undefined)\n        this.setState({\n          start: false,\n          end: false,\n          show: false,\n          test: false,\n          level: 0,\n          numToMem: undefined\n        })\n    }\n    // A callback function\n    // after the record is save, proceed back to the main page\n    saved = () => {\n        this.props.socket.emit(\"login\",this.props.acc)\n    }\n    // save the record to the database and proceed to main page\n    // this.save is a callback function\n    done = () => {\n        this.props.socket.emit(\"save_numMem\",this.props.acc,this.state.level,this.saved)\n    }\n    \n    render() {\n      return (\n    <html>\n        <head><link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.8.2/css/all.css\" integrity=\"sha384-oS3vJWv+0UjzBfQzYUhtDYW+Pj2yciDJxpsK1OYPAYjqT085Qq/1cq5FLXAZQ7Ay\" crossorigin=\"anonymous\"></link></head>\n        <body>\n\t\t\t{!this.state.start && <section onClick={this.start} id=\"banner\">\n\t\t\t\t<p><i class=\"fas fa-sort-numeric-down fa-5x\"></i></p>\n                <h2><strong>NumberMemory Test</strong></h2>\n                <p>Try to remember the numbers within 8 seconds</p>\n                <p>Click anywhere to start</p>\n            </section>}\n            {<div ref=\"Num\" className=\"NumberMemory\" >\n                {this.state.show && <div className=\"textContainer\" ref=\"numberToMem\">{this.state.numToMem}</div>}\n                {this.state.test && <section className=\"wrapper\">\n                    <input onKeyDown={this.enter} className=\"test\" ref=\"input\" type=\"number\" autofocus=\"true\"></input>\n                    <div className=\"textContainer\">Enter the shown number</div>\n                    <ul class=\"actions\">\n\t\t\t\t\t    <li><div onClick={this.submit} class=\"login\">submit</div></li>\n                    </ul>\n                 </section>}\n                 {this.state.end && <section className=\"wrapper\">\n                    <div className=\"textContainer\" id=\"end\">You reached level {this.state.level}</div>\n                    <ul class=\"actions\">\n\t\t\t\t\t    <li><div onClick={this.done} class=\"login\">Done</div></li>\n                        <li><div onClick={this.retry} class=\"login\">Retry</div></li>\n                    </ul>\n                 </section>}\n            </div>}\n        </body>\n    </html>\n      );\n    }\n  }\n\n  export default NumberMemory"]},"metadata":{},"sourceType":"module"}